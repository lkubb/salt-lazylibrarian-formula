{%- set is_netfs = {} %}
{%- for path in [lazylibrarian.lookup.paths.data] + lazylibrarian.mount_paths + lazylibrarian.lookup.paths.misc %}
{%-   if not path %}
{%-     continue %}
{%-   endif %}
{%-   do is_netfs.update({
        path: salt["cmd.run_stdout"](
          "df -P '{data}' | ".format(data=path) ~
          "awk 'BEGIN {e=1} $NF ~ /^\/.+/ { e=0 ; print $1 ; exit } END { exit e }'",
          python_shell=true,
        )
      })
-%}
{%- endfor -%}

---
version: "2.1"
services:
  lazylibrarian:
    image: {{ lazylibrarian.lookup.containers.lazylibrarian.image }}
    container_name: lazylibrarian
    env_file:
      - {{ lazylibrarian.lookup.paths.config_lazylibrarian }}
{%- if lazylibrarian.install.autoupdate %}
    labels:
      - io.containers.autoupdate=registry
{%- endif %}
    volumes:
      - {{ lazylibrarian.lookup.paths.data or "lazylibrarian-data" }}:/config{%- if not is_netfs.get(lazylibrarian.lookup.paths.data) %}:z{%- endif %}
{%- for path in lazylibrarian.mount_paths %}
      - {{ path }}:{{ path }}{%- if not is_netfs.get(path) %}:z{%- endif %}
{%- endfor %}
{%- for path in lazylibrarian.lookup.paths.misc %}
      - {{ path }}:{{ path }}{%- if not is_netfs.get(path) %}:z{%- endif %}
{%- endfor %}
    ports:
      - {{ lazylibrarian.container.host_port }}:{{ lazylibrarian.config.General.http_port }}
    restart: unless-stopped

{%- if not lazylibrarian.lookup.paths.data %}

volumes:
  lazylibrarian-data:
{%- endif %}
